//
// D1AMHSDataDictionaryDefault.h
//
// Library: D1SEM
// Package: AMHSDefault
// Module:  D1SEM
//
// Written by jmin1983@gmail.com
// Feel free to use, for any purpose.
//

#ifndef _D1SEM_AMHS_DATA_DICTIONARY_DEFAULT_H
#define _D1SEM_AMHS_DATA_DICTIONARY_DEFAULT_H

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <B1SECS2/B1SECS2Data.h>

#define DEFINE_AMHS_DATA_DEFAULT(d, t) class D1AMHSDataDefault##d : public B1SECS2Data##t
#define DEFINE_AMHS_DATA_DEFAULT_IMPL(d, t, v) DEFINE_AMHS_DATA_DEFAULT(d, t)\
    { public: D1AMHSDataDefault##d() : B1SECS2Data##t(#d) {}; D1AMHSDataDefault##d(v v_) : B1SECS2Data##t(v_, #d) {};\
              virtual D1AMHSDataDefault##d* clone() const override { return new D1AMHSDataDefault##d(*this); }; };
#define DEFINE_AMHS_DATA_DEFAULT_ASCII(d, l) DEFINE_AMHS_DATA_DEFAULT(d, ASCII)\
    { public: D1AMHSDataDefault##d() : B1SECS2DataASCII(l, #d) {}; D1AMHSDataDefault##d(const B1String& v) : B1SECS2DataASCII(v, l, #d) {};\
              virtual D1AMHSDataDefault##d* clone() const override { return new D1AMHSDataDefault##d(*this); };};
#define DEFINE_AMHS_DATA_DEFAULT_UINT32(d) DEFINE_AMHS_DATA_DEFAULT_IMPL(d, UINT32, uint32)

namespace BnD {
    DEFINE_AMHS_DATA_DEFAULT_UINT32(ALID);
    DEFINE_AMHS_DATA_DEFAULT_ASCII(ALTX, 120);
    DEFINE_AMHS_DATA_DEFAULT_UINT32(CEID);
    DEFINE_AMHS_DATA_DEFAULT_UINT32(ECID);
    DEFINE_AMHS_DATA_DEFAULT_ASCII(ECNAME, -1);
    DEFINE_AMHS_DATA_DEFAULT_ASCII(MDLN, 20);
    DEFINE_AMHS_DATA_DEFAULT_UINT32(RPTID);
    DEFINE_AMHS_DATA_DEFAULT_ASCII(SOFTREV, 20);
    DEFINE_AMHS_DATA_DEFAULT_UINT32(SVID);
    DEFINE_AMHS_DATA_DEFAULT_ASCII(SVNAME, -1);
    DEFINE_AMHS_DATA_DEFAULT_UINT32(VID);

    namespace D1AMHSDataDictionaryDefault {
        enum class DEFAULT_VID {
            ALARMS_ENABLED = 2,                 //  SV,     LIST n(<ALID>).
            ALARMS_SET = 3,                     //  SV,     LIST n(<ALID>).
            CONTROL_STATE = 4,                  //  SV,     UINT8(1:off-line(eq), 2:off-line(attempt), 3(off-line(host), 4:on-line(local), 5:on-line(remote).
            EQP_MODEL = 5,                      //  ECV,    ASCII 20(Default: T300).
            EQP_NAME = 6,                       //  ECV,    ASCII 20(Assigned by Customer).
            EVENTS_ENABLED = 7,                 //  SV,     LIST n(<CEID>).
            PREVIOUS_PROCESS_STATE = 8,         //  SV,     UINT16(1:tssc_init, 2:paused, 3:auto, 4:pausing).
            PROCESS_STATE = 9,                  //  SV,     UINT16(1:tssc_init, 2:paused, 3:auto, 4:pausing).
            OPERATOR_COMMAND = 10,              //  DVVAL,  UINT8(0:off-line, 1:on-line(local), 2:on-line(remote)).
            TIME = 11,                          //  SV,     ASCII 16(YYYYMMDDHHmmsscc).
            SOFT_REV = 12,                      //  ECV,    ASCII 6(1000).

            INIT_CONTROL_STATE = 51,            //  ECV,    UINT8(1:off-line, 2:on-line).
            OFFLINE_SUBSTATE = 52,              //  ECV,    UINT8(1:off-line(eq), 2:off-line(attempt), 3:off-line(host)).
            ONLINE_SUBSTATE = 53,               //  ECV,    UINT8(4:on-line(local), 5:on-line(remote)).
            WBIT_S5F1 = 54,                     //  ECV,    UINT8(0:Wbit cleared, 1: Wbit set).
            WBIT_S6 = 55,                       //  ECV,    UINT8(0:Wbit cleared, 1: Wbit set).

            ACTIVE_CARRIERS = 101,              //  SV,     LIST n(<DataActiveCarrier>).
            ACTIVE_TRANSFERS = 102,             //  SV,     LIST n(TransferCommandInfo).
            CARRIER_ID = 103,                   //  DVVAL,  ASCII 64(unknown:UNKNOWN-<EqpName>-XXX).
            CARRIER_LOC = 104,                  //  DVVAL,  ASCII 64(ZONE_XXX).
            COMMAND_NAME = 105,                 //  DVVAL,  ASCII 20(PAUSE, RESUME, RENAME, TRANSFER, ABORT(local_only), CANCEL(local_only)).
            COMMAND_ID = 106,                   //  DVVAL,  ASCII 64(generated by eq).
            COMMAND_INFO = 107,                 //  SVVAL,  LIST 3(<CommandID>, <Priority>, <Replace>).
            CURRENT_PORT_STATES = 108,          //  SV,     LIST n(<PortInfo>).
            DEST_PORT = 109,                    //  DVVAL,  ASCII 64.
            PORT_ID = 110,                      //  DVVAL,  ASCII 64.
            PORT_INFO = 111,                    //  DVVAL,  LIST 2(<PortID>, <PortTransferState>).
            PORT_TRANSFER_STATE = 112,          //  DVVAL,  UINT8(0:InService, 1:OutOfService(alarmed), 2:Off-line).
            PRIORITY = 113,                     //  DVVAL,  UINT16(0:is not valid, 1:lowest, 99:highest).
            REPLACE = 114,                      //  DVVAL,  UINT16(0:off, >0:on).
            RESULT_CODE = 115,                  //  DVVAL,  UINT16(0:Successful, 1:Aborted by operator, 2:Unexpected removal).
            SOURCE_PORT = 116,                  //  DVVAL,  ASCII 64.
            TRANSFER_COMMAND = 117,             //  DVVAL,  LIST 2(<CommandInfo>, <TransferInfo>).
            TRANSFER_COMPLETED_INFO = 118,      //  DVVAL,  LIST 2(<TransferCommandInfo>, <CarrierLoc>).
            TRANSFER_COMMAND_INFO = 119,        //  DVVAL,  LIST 4(<CarrierID>, <CommandID>, <SourcePort>, <DestPort>).
            TRANSFER_INFO = 120,                //  DVVAL,  LIST 3(<CarrierID>, <SourcePort>, <DestPort>).
            TSSC_AVAILABILTY = 121,             //  SV,     UINT8(0:in_service, 1:out_of_service).
            CARRIER_INFO = 122,                 //  DVVAL,  LIST 3(<CarrierID>, <PortID>, <CarrierLoc>).

            NEW_CARRIER_ID = 151,               //  DVVAL,  ASCII 64.
            OLD_CARRIER_ID = 152,               //  DVVAL,  ASCII 64.
            RENAME_COMMAND = 153,               //  DVVAL,  LIST 3(<CommandID>, <OldCarrierID>, <NewCarrierID>).

            E84_HAND_OFF_FAIL_REASON = 201,     //  DVVAL,  UINT8(0:normal, 1:VALID turned off, 2:TP1 TimedOut, 3:TP2 to, 4:TP3 to, 5: TP4 to, 6: TP5 to).

            ID_READ_RESULT = 251,               //  DVVAL,  UINT16(0:normal, 1:failed, 2:duplicate).
            ID_READ_VALUE = 252,                //  DVVAL,  ASCII 64.

            PORT_TYPE = 301,                    //  DVVAL,  UINT16(0:input port, 1:output port, 2:loop port).
            CARRIERS_IN_PORT = 302,             //  DVVAL,  LIST 2(<PortID>, <CarrierIDList>).
            CARRIER_ID_LIST = 303,              //  DVVAL,  LIST n(<CarrierID>).
            DEST_CHANGE_CMD_PARAM = 304,        //  DVVAL,  LIST 2(<CommandID>, <PortID>).
            LOCAL_TRANSFER_CMD_PARAM = 305,     //  DVVAL,  LIST 5(<CommandID>, <CommandType>, <CarrierID>, <SourcePort>, <DestPort>).
            IDENTIFICATION_ID = 306,            //  DVVAL,  ASCII 128(<CarrierID>YYYYMMDDhhmmss).
        };
        enum class DEFAULT_CEID {
            UNKNOWN = 0,
            EQUIPMENT_OFFLINE = 1,
            CONTROL_STATE_LOCAL = 2,
            CONTROL_STATE_REMOTE = 3,
            OPERATOR_COMMAND_ISSUED = 4,

            TSSC_AUTO_COMPLETED = 101,
            TSSC_AUTO_INITIATED = 102,
            TSSC_PAUSE_COMPLETED = 103,      //  from state pausing.
            TSSC_PAUSED = 104,               //  from state init.
            TSSC_PAUSE_INITIATED = 105,      //  to pausing.

            TSC_ALARM_CLEARED = 111,
            TSC_ALARM_SET = 112,
            TSSC_IN_SERVICE = 113,
            TSSC_OUT_OF_SERVICE = 114,

            TRANSFER_ABORT_COMPLETED = 201,
            TRANSFER_ABORT_FAILED = 202,
            TRANSFER_ABORT_INITIATED = 203,
            TRANSFER_CANCEL_COMPLETED = 204,
            TRANSFER_CANCEL_FAILED = 205,
            TRANSFER_CANCEL_INITIATED = 206,
            TRANSFER_COMPLETED = 207,
            TRANSFER_INITATED = 208,
            TRANSFER_PAUSED = 209,
            TRANSFER_RESUMED = 210,
            TRANSFER_ING = 211,

            CARRIER_INSTALLED = 221,
            CARRIER_REMOVED = 222,
            CARRIER_STORE_COMPLETED = 223,

            CARRIER_LOCATION = 224,
            CARRIER_TRANSFER_AUTO_START = 225,
            CARRIER_INSTALLED_SOURCE_PORT = 226,
            CARRIER_INSTALLED_DEST_PORT = 227,

            PORT_IN_SERVICE = 251,
            PORT_OUT_SERVICE = 252,
            PORT_OFFLINE = 253,

            RENAMED = 310,

            CARRIER_ID_READ = 331,
            OPERATION_INITIATED_ACTION = 332,

            ALARM_CARRIER_FOUND_SET = 2100,
            ALARM_CARRIER_FOUND_CLR = 2101,
            ALARM_E84_HANDOFF_SET = 2200,
            ALARM_E84_HANDOFF_CLR = 2201,
            ALARM_MANUAL_PORT_SENSOR_SET = 2260,
            ALARM_MANUAL_PORT_SENSOR_CLR = 2261,
            ALARM_CARRIER_LOST_SET = 2400,
            ALARM_CARRIER_LOST_CLR = 2401,
            ALARM_ZONE_EXIT_SET = 2410,
            ALARM_ZONE_EXIT_CLR = 2411,
            ALARM_ZONE_ENTER_SET = 2420,
            ALARM_ZONE_ENTER_CLR = 2421,
            ALARM_NO_ROUTER_SET = 2430,
            ALARM_NO_ROUTER_CLR = 2431,
            ALARM_SYSTEM_FAILOVERED_SET = 2432,
            ALARM_SYSTEM_FAILOVERED_CLR = 2433,
        };
        enum class DEFAULT_ALID {
            UNKNOWN = -1,
            CARRIER_FOUND = 10000,
            E84_HANDOFF = 10001,
            MANUAL_PORT_SENSOR = 10002,
            CARRIER_LOST = 10003,
            ZONE_EXIT = 10004,
            ZONE_ENTER = 10005,
            NO_ROUTE = 10006,
            SYSTEM_FAILOVERED = 10007,
        };
    };
}   //  !BnD

#endif  // !_D1SEM_AMHS_DATA_DICTIONARY_DEFAULT_H
