//
// D1AMHSDataManagerDefault.h
//
// Library: D1SEM
// Package: AMHSDefault
// Module:  D1SEM
//
// Written by jmin1983@gmail.com
// Feel free to use, for any purpose.
//

#ifndef _D1SEM_AMHS_DATA_MANAGER_DEFAULT_H
#define _D1SEM_AMHS_DATA_MANAGER_DEFAULT_H

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <D1SEM/D1AMHSDataManager.h>
#include <D1SEM/D1AMHSDataDictionaryDefault.h>

namespace BnD {
    class D1AMHSDataManagerDefault : public D1AMHSDataManager {
    protected:
        B1SECS2DataSVID implMakeSVIDProcessState() const final;
        bool implIsSVIDProcessStatePaused(const B1SECS2DataSV& sv) const final;
#define IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(d) B1SECS2Data* create##d() const final { return new D1AMHSDataDefault##d(); }
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(ALID);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(ALTX);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(CEID);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(ECID);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(ECNAME);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(MDLN);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(RPTID);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(SOFTREV);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(SVID);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(SVNAME);
        IMPL_AMHS_DATA_DEFAULT_CREATE_FUNC(VID);
    public:
#define IMPL_AMHS_DATA_FUNCTION_DEFAULT(d) IMPL_AMHS_DATA_FUNCTION(D1AMHSDataDefault, d)
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(ALID);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(ALTX);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(CEID);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(ECID);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(ECNAME);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(MDLN);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(RPTID);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(SOFTREV);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(SVID);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(SVNAME);
        IMPL_AMHS_DATA_FUNCTION_DEFAULT(VID);
    };
}   //  !BnD

#endif  // !_D1SEM_AMHS_DATA_MANAGER_DEFAULT_H
